# Multi-stage build for Python application
FROM python:3.11-slim as builder

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Create virtual environment and install dependencies
RUN --mount=type=cache,id=pip-cache,target=/root/.cache/pip \
    python -m venv --copies /opt/venv && \
    . /opt/venv/bin/activate && \
    pip install -r requirements.txt

# Add venv to PATH
RUN printf '\nPATH=/opt/venv/bin:$PATH' >> /root/.profile

# Copy application code
COPY . /app

# Set environment variables
ENV PATH=/opt/venv/bin:$PATH
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Expose port
EXPOSE 8000

# Use Python directly to start the application
CMD ["python", "main.py"]
